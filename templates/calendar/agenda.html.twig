{% extends 'base.html.twig' %}

{% block title %} Dashboard {% endblock %}

{% block body %}
    <div class="agenda">
        <div class="container">
            <div class="row">
                <div class="col-sm-12">
                    <div id="calendar-holder" class="card"></div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@5.5.1/main.min.css">
{% endblock %}

{% block javascripts %}

    /* FULLCALENDAR */
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.5.1/main.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.5.1/locales-all.min.js"></script>


    <script type="text/javascript">

        /* FULL CALENDAR */
        window.onload = () => {
            let calendarElt = document.querySelector("#calendar-holder")
            let calendar = new FullCalendar.Calendar(calendarElt, {
                initialView: 'timeGridWeek',
                locale: 'fr',
                timeZone: 'Europe/Paris',
                headerToolbar: {
                    start: 'prev,next today',
                    center: 'title',
                    end: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                events: {{ data|raw }},
                eventClick: function (info) {
                    window.open('/calendar/' + info.event.id)
                },
                editable: true,
                eventResizableFromStart: true,
                allDaySlot: false

            })
            calendar.on('eventChange', (e) => {
                let url = `/api/${e.event.id}/edit`
                let data = {
                    "title": e.event.title,
                    "description": e.event.extendedProps.description,
                    "start": e.event.start,
                    "end": e.event.end,
                    "backgroundColor": e.event.backgroundColor,
                    "borderColor": e.event.borderColor,
                }

                let xhr = new XMLHttpRequest
                xhr.open("PUT", url)
                xhr.send(JSON.stringify(data))
            })
            calendar.render()
        }

    </script>

{% endblock %}